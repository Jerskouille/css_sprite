h1. css_sprite

automatically css sprite.

*************************************************************************

h2. Best Practices

I have written posts "css sprite best practices" to introduce the idea that the css_sprite gem follows.
"english version":http://www.huangzhimin.com/entries/190-css-sprite-best-practices
"chinese version":http://www.huangzhimin.com/entries/189-css-sprite-best-practices

**************************************************************************

h2. What css_sprite does?

css sprite generates css_sprite image and css files automatically for you follow the conventions as follows.

| images under css_sprite directory | class name in css_sprite css |
| twitter_icon.png | .twitter_icon |
| facebook_icon.png | .facebook_icon |
| hotmail-logo.png | .hotmail-logo |
| gmail-logo.png | .gmail-logo |
| icons/twitter_icon.png | .icons .twitter_icon |
| widget/icons/twitter_icon.png | .widget .icons .twitter_icon |
| twitter_icon_hover.png | .twitter_icon:hover |
| twitter-icon-hover.png | .twitter-icon:hover |

css_sprite directory is the directory whose name is "css_sprite" or "css_sprite" suffixed under public/images directory.
css_sprite image is the image file automatically generated under public/images directory.
css_sprite css is the css file automatically generated under public/stylesheets directory.

**************************************************************************

h2. Install

css_sprite depends on the <code>rmagick</code> gem, please make sure RMagick is successfully installed on your system.
css_sprite also depends on the <code>optipng</code> tool as default image optimization, but you can use any other image optimization tool, check the Configuration section. If you use the default optipng tool, please make sure it is successfully installed on your system.

install css_sprite as a gem:
<pre><code>sudo gem install css_sprite</code></pre>

or install css_sprite as a plugin:
<pre><code>script/plugin install git://github.com/flyerhzm/css_sprite.git</code></pre>

**************************************************************************

h2. Usage

1. create a directory whose name is css_sprite or ends with css_sprite (e.g. widget_css_sprite) under <code>public/images</code> directory

2. if you install the css_sprite as a gem, you should add css_sprite task in Rakefile
<pre><code>require 'css_sprite'</code></pre>
If you install it as a plugin, you can skip this step

2. define <code>config/css_sprite.yml</code>, it is not necessary by default.

3. start css_sprite server
<pre><code>rake css_sprite:start</code></pre>

4. put any images which you need to do the css sprite under the css_sprite directory, then you will see the automatically generated css sprite image and css files.

5. include the stylesheet in your view page
<pre><code><%= stylesheet_link_tag 'css_sprite' %></code></pre>

You can stop the css_sprite server by <code>rake css_sprite:stop</code>

You can restart the css_sprite server by <code>rake css_sprite:start</code>

Or you can just do the css sprite manually by <code>rake css_sprite:build</code>

**************************************************************************

h2. Configuration

There is no need to create any configuration by default. If you want some customizations as follows, you need to define <code>config/css_sprite.yml</code> file.

h3. Sass

<pre><code>engine:sass</code></pre>

h3. Image Optimization

css_sprite use *optipng* with optimization level 2 to optimize the auto generated css_sprite image. You can change it to any image optimization command.

<pre><code>optimization: optipng -o 7</code></pre>

h3. Customization styles

* For css
<pre><code>
suffix:
  button: |
    text-indent: -9999px;
    display: block;
    cursor: pointer;
    font-size: 0;
    line-height: 15px;
    border: 0;
    outline: 0;
  icon: |
    text-indent: -9999px;
    cursor: pointer;
</code></pre>

* For sass
<pre><code>
engine: sass
suffix:
  button: |
    text-indent: -9999px
    display: block
    cursor: pointer
    font-size: 0
    line-height: 15px
    border: 0
    outline: 0
  icon: |
    text-indent: -9999px
    cursor: pointer
</code></pre>

<code>engine</code> defines css (default) or sass file to generate.
<code>suffix</code> defines the customization styles for specified images. 
The customization above means if your image filename is button suffixed (e.g. post_button.png), the corresponding class .post_button has the additional style with (outline: 0; border: 0; and so on),
if your image filename is icon suffixed (e.g. twitter_icon.png), the correspondiing class .twitter_icon has the additional style with (text-indent: -9999px; cursor: pointer)

**************************************************************************

Copyright (c) 2009 [Richard Huang (flyerhzm@gmail.com)], released under the MIT license
